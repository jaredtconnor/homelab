services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus 
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/data:/prometheus
    ports:
      - ${PROMETHEUS_PORT}:9090
    user: ${USER_ID}:${USER_ID}
    networks: 
      - monitoring
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager 
    depends_on:
      - cadvisor 
    restart: always
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - ./grafana/data:/var/lib/grafana
    ports:
      - ${GRAPHANA_PORT}:3000
    user: ${USER_ID}:${USER_ID}
    networks: 
      - monitoring
    environment:
      - GF_PATHS_DATA=/var/lib/grafana
      - GF_USERS_ALLOW_SIGN_UP=false
  
  node-exporter:
    image: prom/node-exporter:latest 
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro 
    command: 
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - ${NODE_EXPORTER_PORT}:9100 
    restart: always
    networks: 
      - monitoring

  alertmanager:
    image: prom/alertmanager 
    container_name: alertmanager
    user: ${USER_ID}:${USER_ID}
    ports:
      - ${ALERT_PORT}:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks: 
      - monitoring
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor 
    container_name: cadvisor
    user: ${USER_ID}:${USER_ID}
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - ${CADVISOR_PORT}:8080
    networks: 
      - monitoring
    restart: always

networks:
  monitoring: 
    external: true
    name: monitoring
